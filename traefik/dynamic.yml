# Dynamic configuration for Traefik
# This file defines middlewares, services, and additional routing rules

http:
  middlewares:
    # Security headers middleware
    security-headers:
      headers:
        # Security headers
        frameDeny: true
        contentTypeNosniff: true
        browserXssFilter: true
        referrerPolicy: "strict-origin-when-cross-origin"
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        customResponseHeaders:
          X-Frame-Options: "DENY"
          X-Content-Type-Options: "nosniff"
          X-XSS-Protection: "1; mode=block"
          Strict-Transport-Security: "max-age=31536000; includeSubDomains"
          Content-Security-Policy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:; frame-src 'self';"
    
    # Rate limiting middleware
    rate-limit:
      rateLimit:
        burst: 100
        average: 50
        period: "1m"
    
    # IDE session middleware (combines security and rate limiting)
    ide-session:
      chain:
        middlewares:
          - security-headers
          - rate-limit
    
    # Admin panel middleware (stricter rate limiting)
    admin-panel:
      chain:
        middlewares:
          - security-headers
          - admin-rate-limit
    
    admin-rate-limit:
      rateLimit:
        burst: 20
        average: 10
        period: "1m"
    
    # WebSocket support middleware
    websocket-headers:
      headers:
        customRequestHeaders:
          Connection: "upgrade"
          Upgrade: "websocket"
    
    # CORS middleware for API endpoints
    cors-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        accessControlAllowHeaders:
          - Content-Type
          - Authorization
          - X-Requested-With
        accessControlAllowOriginList:
          - "https://*.${DOMAIN:-localhost}"
          - "http://localhost:3000"
        accessControlMaxAge: 86400

  # Global services configuration
  services:
    # Main application service
    main-app:
      loadBalancer:
        servers:
          - url: "http://host.docker.internal:3000"
        healthCheck:
          path: "/api/health"
          interval: "30s"
          timeout: "5s"

# TLS configuration
tls:
  options:
    default:
      minVersion: "VersionTLS12"
      cipherSuites:
        - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
        - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
        - "TLS_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_RSA_WITH_AES_128_GCM_SHA256"
      curvePreferences:
        - "CurveP521"
        - "CurveP384"
    
    # Strict TLS for admin interfaces
    strict:
      minVersion: "VersionTLS13"
      cipherSuites:
        - "TLS_AES_256_GCM_SHA384"
        - "TLS_CHACHA20_POLY1305_SHA256"
        - "TLS_AES_128_GCM_SHA256"

# Certificate configuration
certificatesResolvers:
  letsencrypt:
    acme:
      email: "${ACME_EMAIL:-admin@example.com}"
      storage: "/letsencrypt/acme.json"
      tlsChallenge: {}
      # Alternative: HTTP challenge for environments where TLS challenge doesn't work
      # httpChallenge:
      #   entryPoint: web